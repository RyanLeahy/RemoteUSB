package com.ryanleahy.remoteusbclient;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * CountDown handles the counting down and reestablishing a connection with the USB device
 * 
 * @author Ryan Leahy
 */
public class CountDown extends Thread
{
    private String myThreadName;
    private UI myUI;
    private Thread t;
    
    /**
     * Constructor creates and starts the count down thread
     * 
     * @param threadName is a String holding the Thread name
     * @param ui is the UI used by the application
     */
    public CountDown(String threadName, UI ui)
    {
        myThreadName = threadName;
        myUI = ui;
    }
    
    /**
     * Starts the thread
     */
    @Override
    public void start()
    {
        if(t == null)
        {
            t = new Thread(this, myThreadName);
            t.start();
        }
    }
    
    /**
     * Runs the threads code
     */
    @Override
    public void run()
    {
        for(int i = 50; i > 0; i--) //countdown from 50 to 1
        {
            if(UI.getRebootPresses() == 1)
                myUI.setStatus("Rebooting: Attempting connection in " + i + " Seconds");
            try
            {
                Thread.sleep(1000);
            }
            catch (InterruptedException ex)
            {
                Logger.getLogger(CountDown.class.getName()).log(Level.SEVERE, null, ex); //generated by IDE, no idea what it does
            }
        }
        
        Driver.connect(); //try to connect after waiting 50 seconds
        
        if(Driver.isConnected()) //if connected
            myUI.setStatus("Connected"); //update ui to reflect
        else
            myUI.setStatus("Connection not established, restart program"); //otherwise update it to tell user to restart program
        
        UI.setRebootPresses(UI.getRebootPresses() - 1); //change the amount of reboot presses back now that the event has been handled
        
        try
        {
            Thread.sleep(3000); //sleep because for some reason fileScan doesn't immediately work after a reboot
        }
        catch (InterruptedException ex)
        {
            Logger.getLogger(CountDown.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        myUI.fileScan();
        
    }
    
}
